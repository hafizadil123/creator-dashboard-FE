{"ast":null,"code":"import _regeneratorRuntime from \"/Users/debpratiher/Downloads/Creator-dashboard/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/debpratiher/Downloads/Creator-dashboard/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/debpratiher/Downloads/Creator-dashboard/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/debpratiher/Downloads/Creator-dashboard/front-end/src/views/examples/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\nimport { forgotPassword, login } from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport config from \"../../config\";\n\nvar ResetPassword = function ResetPassword(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showToast = _useState6[0],\n      setShowToast = _useState6[1];\n\n  var _useState7 = useState(\"Email sent! Check it to reset your password.\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toastMessage = _useState8[0],\n      setToastMessage = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userID = _useState10[0],\n      setUserID = _useState10[1];\n\n  var sendEmail = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return forgotPassword(email);\n\n            case 2:\n              response = _context.sent;\n              data = response.data;\n\n              if (data.success) {\n                console.log(data);\n\n                if (config.DEMO) {\n                  setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to reset your password:\");\n                  setUserID(data.userID);\n                }\n\n                setShowToast(true);\n              } else {\n                setError(data.errors[0].msg);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendEmail() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    style: {\n      position: 'fixed',\n      minHeight: '100px',\n      width: \"35%\",\n      right: 10,\n      bottom: 100,\n      zIndex: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toast, {\n    style: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      padding: 10,\n      borderRadius: 10\n    },\n    onClose: function onClose() {\n      return setShowToast(false);\n    },\n    show: showToast,\n    delay: 5000,\n    autohide: !config.DEMO,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: \"30px\",\n      width: \"100px\"\n    },\n    src: require(\"assets/img/brand/argon-react.png\").default,\n    alt: \"...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, toastMessage, config.DEMO ? /*#__PURE__*/React.createElement(\"a\", {\n    href: config.DOMAIN_NAME + '/auth/confirm-password/' + userID,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, config.DOMAIN_NAME + '/auth/confirm-password/' + userID) : null))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"5\",\n    md: \"7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"bg-secondary shadow border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"px-lg-5 py-lg-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"input-group-alternative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ni ni-email-83\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"email\",\n    autoComplete: \"email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }))), error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted font-italic\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, \"error:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red font-weight-700\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }, error))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"my-4\",\n    color: \"primary\",\n    type: \"button\",\n    onClick: sendEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"Reset Password\")))))));\n};\n\n_s(ResetPassword, \"4ukfUguUjujgdrzPGuTgGLPc1gg=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/debpratiher/Downloads/Creator-dashboard/front-end/src/views/examples/ResetPassword.js"],"names":["React","useState","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","forgotPassword","login","Toast","config","ResetPassword","props","email","setEmail","error","setError","showToast","setShowToast","toastMessage","setToastMessage","userID","setUserID","sendEmail","response","data","success","console","log","DEMO","errors","msg","position","minHeight","width","right","bottom","zIndex","top","backgroundColor","padding","borderRadius","height","require","default","DOMAIN_NAME","e","target","value"],"mappings":"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","sourcesContent":["\nimport React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {forgotPassword, login} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport config from \"../../config\";\n\nconst ResetPassword = props => {\n\n    const [email, setEmail] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\n    const [userID, setUserID] = useState(null);\n\n    const sendEmail = async () => {\n        const response = await forgotPassword(email);\n        const {data} = response;\n        if (data.success) {\n            console.log(data);\n            if (config.DEMO) {\n                setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to reset your password:\")\n                setUserID(data.userID);\n            }\n            setShowToast(true);\n        } else {\n            setError(data.errors[0].msg);\n        }\n    }\n\n    return (\n        <>\n            <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{\n                    position: 'fixed',\n                    minHeight: '100px',\n                    width: \"35%\",\n                    right: 10,\n                    bottom: 100,\n                    zIndex: 50\n                }}\n            >\n                <Toast style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: \"white\",\n                    padding: 10,\n                    borderRadius: 10\n                }} onClose={() => setShowToast(false)} show={showToast} delay={5000} autohide={!config.DEMO}>\n                    <Toast.Header>\n                        <img style={{height: \"30px\", width: \"100px\"}} src={require(\"assets/img/brand/argon-react.png\").default}  alt=\"...\"/>\n                    </Toast.Header>\n                    <Toast.Body>\n                        {toastMessage}\n                        {config.DEMO ?\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-password/' + userID}>\n                                {config.DOMAIN_NAME + '/auth/confirm-password/' + userID}\n                            </a> : null}\n                    </Toast.Body>\n                </Toast>\n            </div>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\n                                           onChange={e => setEmail(e.target.value)}/>\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={sendEmail}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}