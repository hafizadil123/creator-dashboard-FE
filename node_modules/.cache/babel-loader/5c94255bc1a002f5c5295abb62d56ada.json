{"ast":null,"code":"import _regeneratorRuntime from\"/Users/debpratiher/Downloads/argon-dashboard-react-nodejs/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/debpratiher/Downloads/argon-dashboard-react-nodejs/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/debpratiher/Downloads/argon-dashboard-react-nodejs/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/import React,{useState}from\"react\";// reactstrap components\nimport{Button,Card,CardHeader,CardBody,FormGroup,Form,Input,InputGroupAddon,InputGroupText,InputGroup,Row,Col}from\"reactstrap\";import{confirmReset,forgotPassword,login}from\"../../network/ApiAxios\";import Toast from\"react-bootstrap/Toast\";import{useParams}from\"react-router-dom\";var ConfirmPassword=function ConfirmPassword(props){var _useParams=useParams(),id=_useParams.id;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var confirm=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(password!==confirmPassword)){_context.next=3;break;}setError(\"Passwords have to match\");return _context.abrupt(\"return\");case 3:_context.next=5;return confirmReset(id,password);case 5:response=_context.sent;data=response.data;if(data.success){props.history.push(\"/auth/reset-success\");}else{setError(data.msg);}case 8:case\"end\":return _context.stop();}}},_callee);}));return function confirm(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{lg:\"5\",md:\"7\"},/*#__PURE__*/React.createElement(Card,{className:\"bg-secondary shadow border-0\"},/*#__PURE__*/React.createElement(CardBody,{className:\"px-lg-5 py-lg-5\"},/*#__PURE__*/React.createElement(Form,{role:\"form\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputGroup,{className:\"input-group-alternative\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ni ni-lock-circle-open\"}))),/*#__PURE__*/React.createElement(Input,{placeholder:\"Password\",type:\"password\",autoComplete:\"new-password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}}))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputGroup,{className:\"input-group-alternative\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ni ni-lock-circle-open\"}))),/*#__PURE__*/React.createElement(Input,{placeholder:\"Confirm Password\",type:\"password\",autoComplete:\"new-password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}}))),error?/*#__PURE__*/React.createElement(\"div\",{className:\"text-muted font-italic\"},/*#__PURE__*/React.createElement(\"small\",null,\"error:\",\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-red font-weight-700\"},error))):null,/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{className:\"my-4\",color:\"primary\",type:\"button\",onClick:confirm},\"Reset Password\")))))));};export default ConfirmPassword;","map":{"version":3,"sources":["/Users/debpratiher/Downloads/argon-dashboard-react-nodejs/front-end/src/views/examples/ConfirmPassword.js"],"names":["React","useState","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","confirmReset","forgotPassword","login","Toast","useParams","ConfirmPassword","props","id","password","setPassword","confirmPassword","setConfirmPassword","error","setError","confirm","response","data","success","history","push","msg","e","target","value"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {confirmReset, forgotPassword, login} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport {useParams} from \"react-router-dom\";\n\nconst ConfirmPassword = props => {\n\n    const {id} = useParams();\n\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const confirm = async () => {\n        if (password !== confirmPassword) {\n            setError(\"Passwords have to match\");\n            return;\n        }\n        const response = await confirmReset(id, password);\n        const {data} = response;\n        if (data.success) {\n            props.history.push(\"/auth/reset-success\");\n        } else {\n            setError(data.msg);\n        }\n    }\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                           onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={confirm}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ConfirmPassword;\n"]},"metadata":{},"sourceType":"module"}