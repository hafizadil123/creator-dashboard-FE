{"ast":null,"code":"var _jsxFileName = \"/Users/debpratiher/Desktop/website-tiktok-trends/front-end/src/views/examples/googleLogin.js\";\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login'; // refresh token\n// import { refreshTokenSetup } from '../utils/refreshToken';\n\nvar clientId = '610238259195-l3p97soi1ni0tfopmh1rtma2vjbr7s8v.apps.googleusercontent.com';\n{\n  /*\n   const handleLogin = async googleData => {\n       const res = await fetch(\"/api/v1/auth/google\", {\n           method: \"POST\",\n           body: JSON.stringify({\n           token: googleData.tokenId\n         }),\n         headers: {\n           \"Content-Type\": \"application/json\"\n         }\n       })\n       const data = await res.json()\n       // store returned user somehow\n     } */\n}\n\nfunction googleLogin() {\n  var _this = this;\n\n  var onSuccess = function onSuccess(res) {\n    var profileObj = res.profileObj;\n    profileObj.tokenID = res.tokenId;\n    fetch('http://localhost:5100/api/users/googleLogin', {\n      method: 'post',\n      body: JSON.stringify(profileObj),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (responseJson.success == true) {\n        localStorage.setItem(\"reveleUserID\", responseJson.userID);\n        localStorage.setItem(\"reveleAccessToken\", responseJson.accessToken);\n        localStorage.setItem(\"reveleUser\", JSON.stringify(res.profileObj));\n        localStorage.setItem('isPaidUser', responseJson.isPaidUser);\n        window.location.href = \"admin/index\";\n      } else {// alert(\"There is some issue in Google Login at this time. Please try again later.\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n      alert(\"Catch There is some issue in Google Login at this time. Please try again later.\");\n    });\n  };\n\n  var onFailure = function onFailure(res) {\n    console.log('Login failed: res:', res); // alert(\n    //   `Failed to login. üò¢ Please ping this to repo owner twitter.com/sivanesh_fiz`\n    // );\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: clientId,\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    cookiePolicy: 'single_host_origin',\n    style: {\n      marginTop: '100px'\n    },\n    isSignedIn: true,\n    render: function render(renderProps) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: renderProps.onClick,\n        className: \"btn\",\n        style: {\n          color: \"rgb(255, 255, 255)\",\n          backgroundColor: \"rgb(80, 80, 80)\",\n          marginLeft: \"10px\",\n          borderRadius: \"20px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \" Login to app \\u26A1\\uFE0F\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default googleLogin;","map":{"version":3,"sources":["/Users/debpratiher/Desktop/website-tiktok-trends/front-end/src/views/examples/googleLogin.js"],"names":["React","GoogleLogin","clientId","googleLogin","onSuccess","res","profileObj","tokenID","tokenId","fetch","method","body","JSON","stringify","headers","then","response","json","responseJson","success","localStorage","setItem","userID","accessToken","isPaidUser","window","location","href","catch","error","console","alert","onFailure","log","marginTop","renderProps","onClick","color","backgroundColor","marginLeft","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,oBAA5B,C,CACA;AACA;;AAEA,IAAMC,QAAQ,GACZ,0EADF;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAS;;AAET,SAASC,WAAT,GAAuB;AAAA;;AACrB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACzB,QAAIC,UAAU,GAAGD,GAAG,CAACC,UAArB;AACAA,IAAAA,UAAU,CAACC,OAAX,GAAqBF,GAAG,CAACG,OAAzB;AAEAC,IAAAA,KAAK,CAAC,6CAAD,EAAgD;AACnDC,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,UAAf,CAF6C;AAGnDQ,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAH0C,KAAhD,CAAL,CAIGC,IAJH,CAIQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAJR,EAKGF,IALH,CAKQ,UAACG,YAAD,EAAkB;AACtB,UAAIA,YAAY,CAACC,OAAb,IAAwB,IAA5B,EAAkC;AAChCC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,YAAY,CAACI,MAAlD;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CH,YAAY,CAACK,WAAvD;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCT,IAAI,CAACC,SAAL,CAAeR,GAAG,CAACC,UAAnB,CAAnC;AACAc,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCH,YAAY,CAACM,UAAhD;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAvB;AACD,OAND,MAMO,CACL;AACD;AACF,KAfH,EAgBGC,KAhBH,CAgBS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAE,MAAAA,KAAK,CAAC,iFAAD,CAAL;AACD,KAnBH;AAoBD,GAxBD;;AA0BA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAC3B,GAAD,EAAS;AACzByB,IAAAA,OAAO,CAACG,GAAR,CAAY,oBAAZ,EAAkC5B,GAAlC,EADyB,CAEzB;AACA;AACA;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEH,QADZ;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,SAAS,EAAE4B,SAHb;AAIE,IAAA,YAAY,EAAE,oBAJhB;AAKE,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KALT;AAME,IAAA,UAAU,EAAE,IANd;AAOE,IAAA,MAAM,EAAE,gBAAAC,WAAW;AAAA,0BACjB;AAAQ,QAAA,OAAO,EAAEA,WAAW,CAACC,OAA7B;AAAsC,QAAA,SAAS,EAAC,KAAhD;AAAsD,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAG,oBAAT;AAA+BC,UAAAA,eAAe,EAAE,iBAAhD;AAAmEC,UAAAA,UAAU,EAAE,MAA/E;AAAuFC,UAAAA,YAAY,EAAE;AAArG,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADiB;AAAA,KAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD;;AAED,eAAerC,WAAf","sourcesContent":["import React from 'react';\n\nimport { GoogleLogin } from 'react-google-login';\n// refresh token\n// import { refreshTokenSetup } from '../utils/refreshToken';\n\nconst clientId =\n  '610238259195-l3p97soi1ni0tfopmh1rtma2vjbr7s8v.apps.googleusercontent.com';\n{/*\n  const handleLogin = async googleData => {\n      const res = await fetch(\"/api/v1/auth/google\", {\n          method: \"POST\",\n          body: JSON.stringify({\n          token: googleData.tokenId\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      const data = await res.json()\n      // store returned user somehow\n    } */}\n\nfunction googleLogin() {\n  const onSuccess = (res) => {\n    var profileObj = res.profileObj;\n    profileObj.tokenID = res.tokenId;\n\n    fetch('http://localhost:5100/api/users/googleLogin', {\n      method: 'post',\n      body: JSON.stringify(profileObj),\n      headers: {'Content-Type': 'application/json'}\n    }).then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson.success == true) {\n          localStorage.setItem(\"reveleUserID\", responseJson.userID);\n          localStorage.setItem(\"reveleAccessToken\", responseJson.accessToken);\n          localStorage.setItem(\"reveleUser\", JSON.stringify(res.profileObj));\n          localStorage.setItem('isPaidUser', responseJson.isPaidUser);\n          window.location.href = \"admin/index\";\n        } else {\n          // alert(\"There is some issue in Google Login at this time. Please try again later.\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        alert(\"Catch There is some issue in Google Login at this time. Please try again later.\");\n      });\n  };\n\n  const onFailure = (res) => {\n    console.log('Login failed: res:', res);\n    // alert(\n    //   `Failed to login. üò¢ Please ping this to repo owner twitter.com/sivanesh_fiz`\n    // );\n  };\n\n  return (\n    <div>\n      <GoogleLogin\n        clientId={clientId}\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_origin'}\n        style={{ marginTop: '100px' }}\n        isSignedIn={true}\n        render={renderProps => (\n          <button onClick={renderProps.onClick} className=\"btn\" style={{color : \"rgb(255, 255, 255)\", backgroundColor: \"rgb(80, 80, 80)\", marginLeft: \"10px\", borderRadius: \"20px\"}}> Login to app ‚ö°Ô∏è</button>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default googleLogin;\n"]},"metadata":{},"sourceType":"module"}