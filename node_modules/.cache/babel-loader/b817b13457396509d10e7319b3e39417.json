{"ast":null,"code":"import _regeneratorRuntime from \"/Users/debpratiher/Desktop/website-tiktok-trends/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/debpratiher/Desktop/website-tiktok-trends/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"/Users/debpratiher/Desktop/website-tiktok-trends/front-end/src/views/examples/Stripe.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\n\nvar useOptions = function useOptions() {\n  _s();\n\n  var options = useMemo(function () {\n    return {\n      style: {\n        base: {\n          color: \"#424770\",\n          letterSpacing: \"0.025em\",\n          fontFamily: \"Source Code Pro, monospace\",\n          \"::placeholder\": {\n            color: \"#aab7c4\"\n          }\n        },\n        invalid: {\n          color: \"#9e2146\"\n        }\n      }\n    };\n  });\n  return options;\n};\n\n_s(useOptions, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\nvar StripeForm = function StripeForm() {\n  _s2();\n\n  var stripe = useStripe();\n  var elements = useElements();\n  var options = useOptions();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var payload;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(!stripe || !elements)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: \"card\",\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              payload = _context.sent;\n              console.log(\"[PaymentMethod]\", payload);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var createOptions = function createOptions(fontSize) {\n    return {\n      style: {\n        base: {\n          fontSize,\n          color: '#424770',\n          letterSpacing: '0.025em',\n          fontFamily: 'Source Code Pro, monospace',\n          '::placeholder': {\n            color: '#aab7c4'\n          }\n        },\n        invalid: {\n          color: '#9e2146'\n        }\n      }\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      width: 400\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Card details\", /*#__PURE__*/React.createElement(CardElement, Object.assign({}, createOptions(_this.props.fontSize), {\n    options: options,\n    onReady: function onReady() {\n      console.log(\"CardElement [ready]\");\n    },\n    onChange: function onChange(event) {\n      console.log(\"CardElement [change]\", event);\n    },\n    onBlur: function onBlur() {\n      console.log(\"CardElement [blur]\");\n    },\n    onFocus: function onFocus() {\n      console.log(\"CardElement [focus]\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n};\n\n_s2(StripeForm, \"r+jKkWNz2t2V+Hx3GVT/jR+/gNw=\", false, function () {\n  return [useStripe, useElements, useOptions];\n});\n\n_c = StripeForm;\nexport default StripeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeForm\");","map":{"version":3,"sources":["/Users/debpratiher/Desktop/website-tiktok-trends/front-end/src/views/examples/Stripe.js"],"names":["React","useMemo","useStripe","useElements","CardElement","useOptions","options","style","base","color","letterSpacing","fontFamily","invalid","StripeForm","stripe","elements","handleSubmit","event","preventDefault","createPaymentMethod","type","card","getElement","payload","console","log","createOptions","fontSize","width","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,yBAApD;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMC,OAAO,GAAGL,OAAO,CACrB;AAAA,WAAO;AACLM,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAE,SADH;AAEJC,UAAAA,aAAa,EAAE,SAFX;AAGJC,UAAAA,UAAU,EAAE,4BAHR;AAIJ,2BAAiB;AACfF,YAAAA,KAAK,EAAE;AADQ;AAJb,SADD;AASLG,QAAAA,OAAO,EAAE;AACPH,UAAAA,KAAK,EAAE;AADA;AATJ;AADF,KAAP;AAAA,GADqB,CAAvB;AAiBA,SAAOH,OAAP;AACD,CAnBD;;GAAMD,U;;AAqBN,IAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,MAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMG,OAAO,GAAGD,UAAU,EAA1B;;AAEA,MAAMW,YAAY;AAAA,wEAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,KAAK,CAACC,cAAN;;AADmB,oBAGf,CAACJ,MAAD,IAAW,CAACC,QAHG;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,qBAOGD,MAAM,CAACK,mBAAP,CAA2B;AAC/CC,gBAAAA,IAAI,EAAE,MADyC;AAE/CC,gBAAAA,IAAI,EAAEN,QAAQ,CAACO,UAAT,CAAoBlB,WAApB;AAFyC,eAA3B,CAPH;;AAAA;AAObmB,cAAAA,OAPa;AAYnBC,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,OAA/B;;AAZmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZP,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAeA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAsB;AACxC,WAAO;AACLpB,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AACJmB,UAAAA,QADI;AAEJlB,UAAAA,KAAK,EAAE,SAFH;AAGJC,UAAAA,aAAa,EAAE,SAHX;AAIJC,UAAAA,UAAU,EAAE,4BAJR;AAKJ,2BAAiB;AACfF,YAAAA,KAAK,EAAE;AADQ;AALb,SADD;AAULG,QAAAA,OAAO,EAAE;AACPH,UAAAA,KAAK,EAAE;AADA;AAVJ;AADF,KAAP;AAgBD,GAjBH;;AAmBA,sBACE;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE;AAAT,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE,oBAAC,WAAD,oBACMF,aAAa,CAAC,KAAI,CAACG,KAAL,CAAWF,QAAZ,CADnB;AAEE,IAAA,OAAO,EAAErB,OAFX;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbkB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KALH;AAME,IAAA,QAAQ,EAAE,kBAAAR,KAAK,EAAI;AACjBO,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCR,KAApC;AACD,KARH;AASE,IAAA,MAAM,EAAE,kBAAM;AACZO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KAXH;AAYE,IAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,eAoBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACX,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WApBF,CADF;AA0BD,CAjED;;IAAMD,U;UACWX,S,EACEC,W,EACDE,U;;;KAHZQ,U;AAmEN,eAAeA,UAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\n\nconst useOptions = () => {\n  const options = useMemo(\n    () => ({\n      style: {\n        base: {\n          color: \"#424770\",\n          letterSpacing: \"0.025em\",\n          fontFamily: \"Source Code Pro, monospace\",\n          \"::placeholder\": {\n            color: \"#aab7c4\"\n          }\n        },\n        invalid: {\n          color: \"#9e2146\"\n        }\n      }\n    }),\n  );\n  return options;\n};\n\nconst StripeForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const options = useOptions();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const payload = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    console.log(\"[PaymentMethod]\", payload);\n  };\n\n  const createOptions = (fontSize: string) => {\n      return {\n        style: {\n          base: {\n            fontSize,\n            color: '#424770',\n            letterSpacing: '0.025em',\n            fontFamily: 'Source Code Pro, monospace',\n            '::placeholder': {\n              color: '#aab7c4',\n            },\n          },\n          invalid: {\n            color: '#9e2146',\n          },\n        },\n      };\n    };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ width: 400 }}>\n      <label>\n        Card details\n        <CardElement\n          {...createOptions(this.props.fontSize)}\n          options={options}\n          onReady={() => {\n            console.log(\"CardElement [ready]\");\n          }}\n          onChange={event => {\n            console.log(\"CardElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardElement [focus]\");\n          }}\n        />\n      </label>\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n};\n\nexport default StripeForm;\n"]},"metadata":{},"sourceType":"module"}