{"ast":null,"code":"import _regeneratorRuntime from \"/Users/debpratiher/Desktop/website-tiktok-trends/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/debpratiher/Desktop/website-tiktok-trends/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _readOnlyError from \"/Users/debpratiher/Desktop/website-tiktok-trends/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/debpratiher/Desktop/website-tiktok-trends/front-end/src/views/examples/Stripe.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Media, Progress, Table, Container, Row, Col } from \"reactstrap\";\n\nvar StripeCheckoutForm = function StripeCheckoutForm() {\n  _s();\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(elements == null)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  state = {\n    errorMessage: ''\n  };\n\n  handleChange = function handleChange(_ref2) {\n    var error = _ref2.error;\n\n    if (error) {\n      _this.setState({\n        errorMessage: error.message\n      });\n    }\n  };\n\n  handleSubmit = (_readOnlyError(\"handleSubmit\"), function (evt) {\n    evt.preventDefault();\n\n    if (_this.props.stripe) {\n      _this.props.stripe.createToken().then(_this.props.handleResult);\n    } else {\n      console.log(\"Stripe.js hasn't loaded yet.\");\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CardDemo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: _this.handleSubmit.bind(_this),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Card details\", /*#__PURE__*/React.createElement(CardElement, Object.assign({\n    onChange: _this.handleChange\n  }, createOptions(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, _this.state.errorMessage), /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Pay\")));\n};\n\n_s(StripeCheckoutForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = StripeCheckoutForm;\nexport default StripeCheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutForm\");","map":{"version":3,"sources":["/Users/debpratiher/Desktop/website-tiktok-trends/front-end/src/views/examples/Stripe.js"],"names":["React","ReactDOM","loadStripe","CardElement","Elements","useStripe","useElements","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Media","Progress","Table","Container","Row","Col","StripeCheckoutForm","stripe","elements","handleSubmit","event","preventDefault","createPaymentMethod","type","card","getElement","error","paymentMethod","console","log","state","errorMessage","handleChange","setState","message","evt","props","createToken","then","handleResult","bind","createOptions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {loadStripe} from '@stripe/stripe-js';\nimport {\n  CardElement,\n  Elements,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Media,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nconst StripeCheckoutForm = () => {\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (elements == null) {\n      return;\n    }\n\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n\n    console.log(paymentMethod);\n  };\n\n  state = {\n   errorMessage: '',\n  };\n\n   handleChange = ({error}) => {\n     if (error) {\n       this.setState({errorMessage: error.message});\n     }\n   };\n\n   handleSubmit = (evt) => {\n     evt.preventDefault();\n     if (this.props.stripe) {\n       this.props.stripe.createToken().then(this.props.handleResult);\n     } else {\n       console.log(\"Stripe.js hasn't loaded yet.\");\n     }\n   };\n\n  return (\n\n    <div className=\"CardDemo\">\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <label>\n            Card details\n            <CardElement\n              onChange={this.handleChange}\n              {...createOptions()}\n            />\n          </label>\n          <div className=\"error\" role=\"alert\">\n            {this.state.errorMessage}\n          </div>\n          <button>Pay</button>\n        </form>\n      </div>\n  );\n};\n\n\nexport default StripeCheckoutForm;\n"]},"metadata":{},"sourceType":"module"}